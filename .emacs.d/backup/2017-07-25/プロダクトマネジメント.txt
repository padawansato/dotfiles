<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->
**Table of Contents**

- [プロダクトマネジメント](#プロダクトマネジメント)
    - [レキサスの失敗](#レキサスの失敗)
        - [halope](#halope)
        - [photobride](#photobride)
        - [1.5年](#15年)
    - [レキサスの成功](#レキサスの成功)
        - [trastork](#trastork)
        - [6ヶ月](#6ヶ月)
        - [新規事業のプロセス](#新規事業のプロセス)
        - [ローンチのタイミング](#ローンチのタイミング)
    - ["そうだ，合宿！"](#そうだ合宿)
    - [Lean UX](#lean-ux)
        - [コラボレーションと透明性](#コラボレーションと透明性)
        - [ドキュメントは解決につながらない](#ドキュメントは解決につながらない)
        - [問題解決よりも，問題発見と定義](#問題解決よりも問題発見と定義)
    - [cpsサイクル カスタマーソリューション，プロブレム，粗シューション](#cpsサイクル-カスタマーソリューションプロブレム粗シューション)
    - [MVP](#mvp)
    - [プレオーダー](#プレオーダー)
    - [オズの魔法使い](#オズの魔法使い)
    - [](#)

<!-- markdown-toc end -->

# プロダクトマネジメント
絶対成功できるのではなく失敗しづらいものづくりができる．

## レキサスの失敗
### halope
病院業界向けカルテ管理アプリ

### photobride
結婚式の写真

### 1.5年

## レキサスの成功
### trastork
rubyだけで，js,phpなどのほかを割り切って最小で開発した．
### 6ヶ月

### 新規事業のプロセス
３年から微量，増え始めた．

### ローンチのタイミング

## "そうだ，合宿！"
合宿で，いままでは，
マルチタスク
だったものが，

逐次処理で，一点集中でできる．


## Lean UX
### コラボレーションと透明性
### ドキュメントは解決につながらない
### 問題解決よりも，問題発見と定義

## cpsサイクル カスタマーソリューション，プロブレム，粗シューション


## MVP
## プレオーダー
ローンチ前に商品の試作品など魅力を伝え，事前登録や購入を募る．

## オズの魔法使い
完全に機能を実装していない．手作業で補う．
だが，ユーザーはわからない．
ユーザーのニーズがあるとわかったら，本格的にやる．

## 他多数



## ユーザへのバックログ
googleスプレッドシートで，
プロダクトの持つであろう機能に分割し，
それぞれが顧客に与える良い効果を
ストーリー，
合格基準，
で定義する．


## バックログ
